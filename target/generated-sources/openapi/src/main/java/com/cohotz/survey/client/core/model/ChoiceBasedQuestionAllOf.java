/*
 * Cohotz Core Service
 * Cohotz Core Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cohotz.survey.client.core.model;

import java.util.Objects;
import java.util.Arrays;
import com.cohotz.survey.client.core.model.ResponseOption;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ChoiceBasedQuestionAllOf
 */
@JsonPropertyOrder({
  ChoiceBasedQuestionAllOf.JSON_PROPERTY_RESPONSE_OPTION_MAP,
  ChoiceBasedQuestionAllOf.JSON_PROPERTY_MAX
})
@JsonTypeName("ChoiceBasedQuestion_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-08T23:22:50.644014200+05:30[Asia/Calcutta]")
public class ChoiceBasedQuestionAllOf {
  public static final String JSON_PROPERTY_RESPONSE_OPTION_MAP = "responseOptionMap";
  private Map<String, ResponseOption> responseOptionMap = null;

  public static final String JSON_PROPERTY_MAX = "max";
  private Double max;

  public ChoiceBasedQuestionAllOf() { 
  }

  public ChoiceBasedQuestionAllOf responseOptionMap(Map<String, ResponseOption> responseOptionMap) {
    
    this.responseOptionMap = responseOptionMap;
    return this;
  }

  public ChoiceBasedQuestionAllOf putResponseOptionMapItem(String key, ResponseOption responseOptionMapItem) {
    if (this.responseOptionMap == null) {
      this.responseOptionMap = new HashMap<>();
    }
    this.responseOptionMap.put(key, responseOptionMapItem);
    return this;
  }

   /**
   * Get responseOptionMap
   * @return responseOptionMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESPONSE_OPTION_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, ResponseOption> getResponseOptionMap() {
    return responseOptionMap;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_OPTION_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseOptionMap(Map<String, ResponseOption> responseOptionMap) {
    this.responseOptionMap = responseOptionMap;
  }


  public ChoiceBasedQuestionAllOf max(Double max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Double max) {
    this.max = max;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChoiceBasedQuestionAllOf choiceBasedQuestionAllOf = (ChoiceBasedQuestionAllOf) o;
    return Objects.equals(this.responseOptionMap, choiceBasedQuestionAllOf.responseOptionMap) &&
        Objects.equals(this.max, choiceBasedQuestionAllOf.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseOptionMap, max);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChoiceBasedQuestionAllOf {\n");
    sb.append("    responseOptionMap: ").append(toIndentedString(responseOptionMap)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

