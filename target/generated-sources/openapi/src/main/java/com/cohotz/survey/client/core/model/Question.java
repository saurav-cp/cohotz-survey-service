/*
 * Cohotz Core Service
 * Cohotz Core Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cohotz.survey.client.core.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Question
 */
@JsonPropertyOrder({
  Question.JSON_PROPERTY_ID,
  Question.JSON_PROPERTY_POOL_QUES_REFERENCE_CODE,
  Question.JSON_PROPERTY_POSITION,
  Question.JSON_PROPERTY_SKIPPABLE,
  Question.JSON_PROPERTY_WEIGHT,
  Question.JSON_PROPERTY_MAX
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-08T23:22:50.644014200+05:30[Asia/Calcutta]")
public class Question {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_POOL_QUES_REFERENCE_CODE = "poolQuesReferenceCode";
  private String poolQuesReferenceCode;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_SKIPPABLE = "skippable";
  private Boolean skippable;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private Double weight;

  public static final String JSON_PROPERTY_MAX = "max";
  private Double max;

  public Question() { 
  }

  public Question id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Question poolQuesReferenceCode(String poolQuesReferenceCode) {
    
    this.poolQuesReferenceCode = poolQuesReferenceCode;
    return this;
  }

   /**
   * Get poolQuesReferenceCode
   * @return poolQuesReferenceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POOL_QUES_REFERENCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPoolQuesReferenceCode() {
    return poolQuesReferenceCode;
  }


  @JsonProperty(JSON_PROPERTY_POOL_QUES_REFERENCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoolQuesReferenceCode(String poolQuesReferenceCode) {
    this.poolQuesReferenceCode = poolQuesReferenceCode;
  }


  public Question position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Integer position) {
    this.position = position;
  }


  public Question skippable(Boolean skippable) {
    
    this.skippable = skippable;
    return this;
  }

   /**
   * Get skippable
   * @return skippable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SKIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkippable() {
    return skippable;
  }


  @JsonProperty(JSON_PROPERTY_SKIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkippable(Boolean skippable) {
    this.skippable = skippable;
  }


  public Question weight(Double weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(Double weight) {
    this.weight = weight;
  }


  public Question max(Double max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Double max) {
    this.max = max;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Question question = (Question) o;
    return Objects.equals(this.id, question.id) &&
        Objects.equals(this.poolQuesReferenceCode, question.poolQuesReferenceCode) &&
        Objects.equals(this.position, question.position) &&
        Objects.equals(this.skippable, question.skippable) &&
        Objects.equals(this.weight, question.weight) &&
        Objects.equals(this.max, question.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, poolQuesReferenceCode, position, skippable, weight, max);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Question {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    poolQuesReferenceCode: ").append(toIndentedString(poolQuesReferenceCode)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    skippable: ").append(toIndentedString(skippable)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

